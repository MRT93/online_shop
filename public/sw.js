"use strict";(()=>{var s="static-version",i="dynamic-version",a=self;async function o(...e){try{await(await caches.open(s)).addAll(e)}catch(t){console.error("Failed to add to static cache:",t)}}async function r(e){try{let t=await caches.open(i),n=await fetch(e);return await t.put(e,n.clone()),n}catch(t){throw console.error("Failed to add to dynamic cache:",t),t}}async function l(e){try{let t=await caches.match(e.request);if(t)return t;{let{origin:n}=new URL(e.request.url);return n===a.location.origin&&(e.request.destination==="script"||e.request.destination==="style")?await r(e.request):await fetch(e.request)}}catch(t){return console.error("Fetch failed:",t),await caches.match("/offline.html")||new Response("offline",{status:503})}}a.addEventListener("install",e=>{console.log("-----[ service worker installed ]-----"),e.waitUntil((async()=>{try{await o("/","/fonts/dana-black.woff2","/fonts/dana-fanum-bold.woff2","/fonts/dana-fanum-medium.woff2","/offline.html","/offline.css"),await a.skipWaiting()}catch(t){console.error("Install event failed:",t)}})())});a.addEventListener("activate",e=>{console.log("-----[ service worker activated ]-----"),e.waitUntil((async()=>{try{let t=await caches.keys();await Promise.all(t.map(c=>{if(c!==s&&c!==i)return caches.delete(c)})),(await a.clients.matchAll({includeUncontrolled:!0})).forEach(c=>{c.postMessage("activated")}),await a.clients.claim()}catch(t){console.error("Activate event failed:",t)}})())});a.addEventListener("fetch",e=>{e.respondWith(l(e))});a.addEventListener("message",e=>{console.log(e.data)});})();
